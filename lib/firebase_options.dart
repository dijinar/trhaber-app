// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show TargetPlatform, defaultTargetPlatform, kDebugMode, kIsWeb;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get android {
    try {
      return const FirebaseOptions(
        apiKey: "AIzaSyD11EoDMqZDrMCYG8km-hovwwz9USw0HvE",
        appId: "1:165231395839:android:7c3d54d0c2feb4c0781dca",
        messagingSenderId: "165231395839",
        projectId: "trhabernotification-776df",
        storageBucket: "trhabernotification-776df.firebasestorage.app",
      );
    } catch (e) {
      if (kDebugMode) {
        print('Firebase yapılandırma hatası (Android): $e');
      }
      rethrow;
    }
  }

  static FirebaseOptions get ios {
    try {
      return const FirebaseOptions(
        apiKey: "AIzaSyD5CMOhgu0XHqMC2DpzvarvgkAm84ZDJCk",
        appId: "1:165231395839:ios:466a4803faf9a082781dca",
        messagingSenderId: "165231395839",
        projectId: "trhabernotification-776df",
        storageBucket: "trhabernotification-776df.firebasestorage.app",
        iosBundleId: "com.trhaber",
      );
    } catch (e) {
      if (kDebugMode) {
        print('Firebase yapılandırma hatası (iOS): $e');
      }
      rethrow;
    }
  }
}
